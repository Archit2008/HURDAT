filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(tmp_summary, file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(tmp_details, file=paste(paste("data",
paste(x, "details", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(tmp_wind, file=paste(paste("data",
paste(x, "wind", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
rm(list=ls())
load("data/AL_details.rda")
rm(tmp_details)
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(paste(x, "summary", sep = "_"), file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(paste(x, "details", sep = "_"), file=paste(paste("data",
paste(x, "details", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(paste(x, "wind", sep = "_"), file=paste(paste("data",
paste(x, "wind", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
?get
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(get(paste(x, "summary", sep = "_")), file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list(paste(x, "summary", sep = "_")), file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
rm(list=ls())
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list(paste(x, "summary", sep = "_")), file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list=list(paste(x, "summary", sep = "_")), file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list=c(paste(x, "summary", sep = "_")), file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
rm(list=ls())
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list=c(paste(x, "summary", sep = "_")),
file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(list=c(paste(x, "details", sep = "_")),
file=paste(paste("data",
paste(x, "details", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(list=c(paste(x, "wind", sep = "_")),
file=paste(paste("data",
paste(x, "wind", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
load("data/AL_summary.rda")
str(AL_summary)
rm(AL_summary)
hurdat_separate()
rm(list=ls())
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Records = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list=c(paste(x, "summary", sep = "_")),
file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(list=c(paste(x, "details", sep = "_")),
file=paste(paste("data",
paste(x, "details", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(list=c(paste(x, "wind_radius", sep = "_")),
file=paste(paste("data",
paste(x, "wind_radius", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
str(AL_summary)
rm(list=ls())
library(Hurricanes)
?AL_summary
load("data/AL_details.rda")
str(AL_details)
?raw_hurdat
rm(list=ls())
#' Download, parse, clean and seperate HURDAT into multiple data frames
#'
hurdat_separate <- function() {
raw_hurdat()
df <- bind_rows(atlantic, nepac)
df$Latitude <- clean_lat(df$Latitude)
df$Longitude <- clean_lon(df$Longitude)
df$Longitude <- sapply(df$Longitude, function(x) {
ifelse(x < -180, 360 + x, x)
})
df$Key <- as.factor(df$Key)
df$YearNum <- as.integer(df$YearNum)
df$Year <- as.factor(df$Year)
df$Record <- as.factor(df$Record)
df$Status <- as.factor(df$Status)
basins <- unique(df$Basin)
invisible(sapply(basins, function(x){
tmp <- filter(df, Basin == x)
tmp_summary <- tmp %>%
group_by(Key) %>%
summarise(Observations = n(),
StartDate = min(Datetime),
EndDate = max(Datetime),
YearNum = first(YearNum),
Year = first(Year),
Name = first(Name),
MaxWind = max(Wind, na.rm = TRUE),
MinPressure = min(Pressure, na.rm = TRUE))
tmp_details <- tmp %>%
select(Key, Datetime, Record, Status, Latitude, Longitude, Wind,
Pressure)
tmp_wind <- tmp %>%
filter(rowSums(tmp[13:24], na.rm = TRUE) > 0) %>%
select(Key, Datetime, WindRadii34NE:WindRadii64NW)
assign(paste(x, "summary", sep = "_"), tmp_summary, envir = .GlobalEnv)
assign(paste(x, "details", sep = "_"), tmp_details, envir = .GlobalEnv)
assign(paste(x, "wind_radius", sep = "_"), tmp_wind, envir = .GlobalEnv)
save(list=c(paste(x, "summary", sep = "_")),
file=paste(paste("data",
paste(x, "summary", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(list=c(paste(x, "details", sep = "_")),
file=paste(paste("data",
paste(x, "details", sep = "_"),
sep = "/"), "rda",
sep = "."))
save(list=c(paste(x, "wind_radius", sep = "_")),
file=paste(paste("data",
paste(x, "wind_radius", sep = "_"),
sep = "/"), "rda",
sep = "."))
}))
}
hurdat_separate()
rm(list=ls())
library(Hurricanes)
?AL_details
library(Hurricanes)
load("data/AL_wind_radius.rda")
str(AL_wind_radius)
rm(list=ls())
?AL_wind_radius
library(Hurricanes)
raw_hurdat()
warning()
warnings()
source("./knitpages.r")
library(Hurricanes)
source('E:/github/Hurricanes/data-raw/hurdat-parse-tidy.R', echo=TRUE)
hurdat_separate()
unique(nepac$Basin)
View(nepac)
hurdat_separate()
unique(df$Basin)
unique(df$Key)
rm(list=ls())
raw_hurdat()
library(Hurricanes)
raw_hurdat()
View(nepac)
library(Hurricanes)
rm(list=ls())
library(Hurricanes)
raw_hurdat()
View(nepac_problems)
summary(nepac_problems)
View(nepac)
hurdat_separate()
debugSource('E:/github/Hurricanes/data-raw/hurdat-parse-tidy.R', echo=TRUE)
source('E:/github/Hurricanes/data-raw/hurdat-parse-tidy.R', echo=TRUE)
hurdat_separate()
library(Hurricanes)
